@model  Pictulr.Data.Picture[]

@{
    ViewBag.Title = "Index";
}

<h2>Picture Index</h2>

<p>
    @Html.ActionLink("Create New", "Create")
</p>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <div class="containter my-5">
        <div class="row py-4">
            <div class="form-horizontal col-sm-6 col-md-8 col-lg-6">
                <h4>Select local images to Add </h4>
                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })



                @for (int i = 0; i < Model.Count(); i++)
                {
                    @Html.HiddenFor(model => model[i].ImageLocation)
                    @Html.HiddenFor(model => model[i].NodeName)


                    @*
            <div class="d-flex flex-lg-row flex-column align-items-md-center justify-content-lg-center">
                @foreach (var item in Model)
                {
                    <div class="col-2 p-2 mr-4 card text-success bg-dark border-success mb-3" style="max-width: 20rem;">
                        <div class="card-header bg-secondary text-light">@Html.DisplayFor(Modelitem => item.PrinterBrand)</div>
                        @if (item.Image != null && item.Image.Count() > 0)
                            <img class="card-img-top mt-1" src="/Printer/RetrieveImage/@item.PrinterId" alt="" />
                        <div class="card-body bg-dark">
                            <p class="card-text"> @Html.DisplayFor(Modelitem => item.PrinterModel)</p>
                        </div>
                        <div class="d-table-row card-footer bg-secondary">
                            <div class="row justify-content-around">

                                <input type="button" value="Edit" class="btn btn-warning btn-sm" onclick="window.location = '@Url.Action("Edit", new {id = item.PrinterId})'" />

                                <input type="button" value="Delete" class="btn btn-outline-danger btn-sm" onclick="window.location = '@Url.Action("Delete", new {id = item.PrinterId})'" />

                            </div>
                            <input type="button" value="Detail" class="btn btn-dark btn-sm btn-block mt-1" onclick="window.location = '@Url.Action("Detail", new {id = item.PrinterId})'" />
                        </div>
                    </div>
                }
            </div>
                    *@

                    @Html.EditorFor(model => model[i].PictureTitle, new { htmlAttributes = new { @class = "form-control" } })
                    <div class="form-group">
                        @Html.LabelFor(model => model[i].PictureTitle, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-4">
                            @Html.EditorFor(model => model[i].PictureTitle, new { htmlAttributes = new { @class = "form-control" } })
                            @* @Html.ValidationMessageFor(model => model[i].PictureTitle, "", new { @class = "text-danger" })*@
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="row my-5">
                            <div class="col-md-3 col-md-offset-1 my-6">
                                <img src="@Url.Content(Model[i].ImageLocation)" height="150" />
                            </div>
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model[i].SubjectName, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-4">
                            @Html.EditorFor(model => model[i].SubjectName, new { htmlAttributes = new { @class = "form-control" } })
                            @* @Html.ValidationMessageFor(model => model[i].SubjectName, "", new { @class = "text-danger" })*@
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model[i].NodeName, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-4">
                            @Html.EditorFor(model => model[i].NodeName, new { htmlAttributes = new { @class = "form-control" } })
                            @* @Html.ValidationMessageFor(model => model[i].NodeName, "", new { @class = "text-danger" })*@
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model[i].AddImage, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-4">
                            @Html.CheckBoxFor(model => model[i].AddImage, new { htmlAttributes = new { @class = "form-control" } })
                            @* @Html.ValidationMessageFor(model => model[i].AddImage, "", new { @class = "text-danger" })*@
                        </div>
                    </div>












                }
                <div class="form-group">
                    <div class="col-md-offset-2 col-md-6">
                        <input type="submit" value="Create" class="btn btn-warning" />
                    </div>
                </div>
            </div>
        </div>
    </div>
}

